{"version":3,"file":"static/js/288.77674857.chunk.js","mappings":"mHAGMA,GAAcC,E,OAAAA,GAAOC,EAAAA,EAAPD,CAAY,CAC9BE,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,K,+QCPaC,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KAAaG,SAAS,cCFrBE,EAAiBL,EAAAA,KAAaC,MAAM,CAC/CK,UAAWN,EAAAA,KAAaG,SAAS,YACjCI,SAAUP,EAAAA,KAAaG,SAAS,YAChCD,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KAAaG,SAAS,YAChCK,SAAUR,EAAAA,KAAaG,SAAS,YAChCM,WAAYT,EAAAA,KAAaG,SAAS,YAClCO,QAASV,EAAAA,KAAaG,SAAS,cCTpBQ,EAAqB,CAChCT,MAAO,GACPE,SAAU,ICFCQ,EAAwB,CACnCN,UAAW,GACXC,SAAU,GACVL,MAAO,GACPE,SAAU,GACVI,SAAU,GACVC,WAAY,GACZC,QAAS,I,SCwMX,EAhMa,WACX,IAAAG,GAAgCC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACpBI,GAAYC,EAAAA,EAAAA,KAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,GAAc,qBAC5BC,EAAuB,UAAbV,EACVW,EAA0B,aAAbX,EAEbY,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAQC,GAAa,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG3C,IAASL,KADHD,EAAW,IAAIO,SACHT,EAChBE,EAASQ,OAAOP,EAAOH,EAAOG,IAEoB,OAApDD,EAASQ,OAAO,cAAeV,EAAOzB,QAAQoC,MAAML,EAAAE,KAAA,GAEvBI,EAAAA,EAAAA,IAAaV,GAAU,KAAD,EAA7CE,EAAcE,EAAAO,KAEpBZ,EAAca,YAEVV,GACFrB,EAAY,SACb,wBAAAuB,EAAAS,OAAA,GAAAhB,EAAA,KACF,gBAfaiB,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAiBRC,EAAK,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,EAAOtB,EAAQC,GAAa,IAAAsB,EAAA,OAAA1B,EAAAA,EAAAA,KAAAQ,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,GACbiB,EAAAA,EAAAA,IAAUzB,GAAQ,KAAD,GAAtCuB,EAAYC,EAAAX,QAGhB3B,GACEwC,EAAAA,EAAAA,IAAS,CACPC,KAAMJ,EAAaI,KACnBC,MAAOL,EAAaK,SAGxBxC,EAAS,SACTa,EAAca,aACf,wBAAAU,EAAAT,OAAA,GAAAO,EAAA,KACF,gBAbUO,EAAAC,GAAA,OAAAT,EAAAH,MAAA,KAAAC,UAAA,KAeLY,EAAgB,eAAAC,GAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmC,EAAOjC,EAAQC,GAAa,OAAAJ,EAAAA,EAAAA,KAAAQ,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,WAC/ChB,EAAQ,CAAD0C,EAAA1B,KAAA,eAAA0B,EAAA1B,KAAA,EAAQY,EAAMpB,EAAQC,GAAe,KAAD,MAC3CR,EAAW,CAADyC,EAAA1B,KAAA,eAAA0B,EAAA1B,KAAA,EAAQd,EAASM,EAAQC,GAAe,KAAD,mBAAAiC,EAAAnB,OAAA,GAAAkB,EAAA,KACtD,gBAHqBE,EAAAC,GAAA,OAAAJ,EAAAd,MAAA,KAAAC,UAAA,KAKtB,OACEkB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,SAAUR,EACVS,cAAehD,EAAUhB,EAAqBC,EAC9CgE,iBAAkBjD,EAAU5B,EAAcM,EAAewE,SAExD,SAAAC,GAAA,IAAG3C,EAAM2C,EAAN3C,OAAQ4C,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAYJ,EAAZI,aAAcC,EAAYL,EAAZK,aAAcC,EAAaN,EAAbM,cAAenC,EAAS6B,EAAT7B,UAAS,OAC3FoC,EAAAA,EAAAA,MAAA,QAAMX,SAAUS,EAAcG,aAAa,QAAOT,SAAA,EAChDQ,EAAAA,EAAAA,MAAC1F,EAAAA,EAAG,CACFC,QAAS,OACT2F,IAAK,OACLC,oBAAqB,4BACrBC,GAAI,CAAE,UAAW,CAAEC,WAAYjE,OAAckE,EAAY,WAAad,SAAA,CAErEjD,IACCyD,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAf,SAAA,EACEL,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,aACNC,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAO7B,UACdwC,KAAK,YACLmD,MAAOC,QAAQlB,EAAQ1E,YAAc4F,QAAQnB,EAAOzE,WACpD6F,WAAYnB,EAAQ1E,WAAayE,EAAOzE,UACxCmF,GAAI,CAAEC,WAAY,aAEpBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,YACNC,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAO5B,SACduC,KAAK,WACLmD,MAAOC,QAAQlB,EAAQzE,WAAa2F,QAAQnB,EAAOxE,UACnD4F,WAAYnB,EAAQzE,UAAYwE,EAAOxE,SACvCkF,GAAI,CAAEC,WAAY,aAEpBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,WACNC,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAO3B,SACdsC,KAAK,WACLmD,MAAOC,QAAQlB,EAAQxE,WAAa0F,QAAQnB,EAAOvE,UACnD2F,WAAYnB,EAAQxE,UAAYuE,EAAOvE,SACvCiF,GAAI,CAAEC,WAAY,aAEpBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,aACNC,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAO1B,WACdqC,KAAK,aACLmD,MAAOC,QAAQlB,EAAQvE,aAAeyF,QAAQnB,EAAOtE,YACrD0F,WAAYnB,EAAQvE,YAAcsE,EAAOtE,WACzCgF,GAAI,CAAEC,WAAY,aAEpBlB,EAAAA,EAAAA,KAAC7E,EAAAA,EAAG,CACF+F,WAAY,SACZU,OAAM,aAAAC,OAAelF,EAAQmF,QAAQC,QACrCC,aAAc,MACdC,EAAG,OAAO5B,UAEVL,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CACPC,OAAQ,kBACRC,UAAU,EACVC,OAAQ,SAACC,GAAa,OAAK1B,EAAc,UAAW0B,EAAc,GAAG,EAACjC,SAErE,SAAAkC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAAa,OAC7B5B,EAAAA,EAAAA,MAAC1F,EAAAA,GAAGuH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACEF,KAAc,IAClBZ,OAAM,cAAAC,OAAgBlF,EAAQgG,QAAQC,MACtCX,EAAG,OACHhB,GAAI,CAAE,UAAW,CAAE4B,OAAQ,YAAcxC,SAAA,EAEzCL,EAAAA,EAAAA,KAAA,SAAA0C,EAAAA,EAAAA,GAAA,GAAWD,MACT9E,EAAOzB,SAGP2E,EAAAA,EAAAA,MAAC5F,EAAAA,EAAW,CAAAoF,SAAA,EACVL,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAAzC,SAAE1C,EAAOzB,QAAQoC,QAC5B0B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,QAJf/C,EAAAA,EAAAA,KAAA,KAAAK,SAAG,wBAOD,UAOhBL,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,QACNC,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAOjC,MACd4C,KAAK,QACLmD,MAAOC,QAAQlB,EAAQ9E,QAAUgG,QAAQnB,EAAO7E,OAChDiG,WAAYnB,EAAQ9E,OAAS6E,EAAO7E,MACpCuF,GAAI,CAAEC,WAAY,aAEpBlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,MAAM,WACN0B,KAAK,WACLzB,OAAQd,EACRe,SAAUd,EACV5C,MAAOH,EAAO/B,SACd0C,KAAK,WACLmD,MAAOC,QAAQlB,EAAQ5E,WAAa8F,QAAQnB,EAAO3E,UACnD+F,WAAYnB,EAAQ5E,UAAY2E,EAAO3E,SACvCqF,GAAI,CAAEC,WAAY,gBAItBL,EAAAA,EAAAA,MAAC1F,EAAAA,EAAG,CAAAkF,SAAA,EACFL,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CACLC,WAAS,EACTF,KAAK,SACL/B,GAAI,CACFkC,OAAQ,SACRlB,EAAG,OACHmB,gBAAiBzG,EAAQgG,QAAQC,KACjCS,MAAO1G,EAAQ2G,WAAWC,IAC1B,UAAW,CAAEF,MAAO1G,EAAQgG,QAAQC,OACpCvC,SAEDlD,EAAU,QAAU,cAEvB6C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CACTU,QAAS,WACP9G,EAAYS,EAAU,WAAa,SACnCsB,GACF,EACAwC,GAAI,CACFwC,eAAgB,YAChBJ,MAAO1G,EAAQgG,QAAQC,KACvB,UAAW,CAAEC,OAAQ,UAAWQ,MAAO1G,EAAQgG,QAAQe,QACvDrD,SAEDlD,EAAU,wCAA0C,+CAGpD,GAIf,EChLA,EA3BkB,WAChB,IAAMwG,GAAQ/G,EAAAA,EAAAA,KACRgH,GAAqB1G,EAAAA,EAAAA,GAAc,sBAEzC,OACE2D,EAAAA,EAAAA,MAAC1F,EAAAA,EAAG,CAAAkF,SAAA,EACFL,EAAAA,EAAAA,KAAC7E,EAAAA,EAAG,CAAC0I,MAAO,OAAQT,gBAAiBO,EAAMhH,QAAQ2G,WAAWC,IAAKtB,EAAG,UAAW6B,UAAW,SAASzD,UACnGL,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACiB,WAAW,OAAOC,SAAS,6BAA6BX,MAAM,UAAShD,SAAC,kBAItFQ,EAAAA,EAAAA,MAAC1F,EAAAA,EAAG,CACF0I,MAAOD,EAAqB,MAAQ,MACpC3B,EAAG,OACHgC,EAAG,YACHjC,aAAc,SACdoB,gBAAiBO,EAAMhH,QAAQ2G,WAAWC,IAAIlD,SAAA,EAE9CL,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACiB,WAAY,MAAOG,QAAQ,KAAKjD,GAAI,CAAEkD,GAAI,UAAW9D,SAAC,0DAGlEL,EAAAA,EAAAA,KAACoE,EAAI,SAIb,C,0LC1BaC,EAAW,eAAA/G,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO6B,EAAO+E,GAAM,IAAAC,EAAAC,EAAAC,EAAA,OAAAjH,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAK5C,OAJKoG,EAAS,CACbG,QAAS,CACPC,cAAc,UAAD9C,OAAYtC,KAE5BtB,EAAAE,KAAA,EAEsByG,EAAAA,EAAAA,IAAU,GAAD/C,OAAIgD,yCAA6B,WAAAhD,OAAUyC,GAAUC,GAAQ,KAAD,EAAhF,OAAgFC,EAAAvG,EAAAO,KAApFiG,EAAID,EAAJC,KAAIxG,EAAA6G,OAAA,SACLL,GAAI,wBAAAxG,EAAAS,OAAA,GAAAhB,EAAA,KACZ,gBATuBiB,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAWXM,EAAS,eAAAJ,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,EAAOtB,GAAM,IAAAoH,EAAAN,EAAA,OAAAjH,EAAAA,EAAAA,KAAAQ,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACbyG,EAAAA,EAAAA,KAAW,GAAD/C,OAAIgD,yCAA6B,eAAelH,GAAQ,KAAD,EAA5E,OAA4EoH,EAAA5F,EAAAX,KAAhFiG,EAAIM,EAAJN,KAAItF,EAAA2F,OAAA,SACLL,GAAI,wBAAAtF,EAAAT,OAAA,GAAAO,EAAA,KACZ,gBAHqBO,GAAA,OAAAR,EAAAH,MAAA,KAAAC,UAAA,KAKTP,EAAY,eAAAoB,GAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmC,EAAOjC,GAAM,IAAAqH,EAAAP,EAAA,OAAAjH,EAAAA,EAAAA,KAAAQ,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EAChByG,EAAAA,EAAAA,KAAW,GAAD/C,OAAIgD,yCAA6B,kBAAkBlH,GAAQ,KAAD,EAA/E,OAA+EqH,EAAAnF,EAAArB,KAAnFiG,EAAIO,EAAJP,KAAI5E,EAAAiF,OAAA,SACLL,GAAI,wBAAA5E,EAAAnB,OAAA,GAAAkB,EAAA,KACZ,gBAHwBH,GAAA,OAAAE,EAAAd,MAAA,KAAAC,UAAA,KAKZmG,EAAe,eAAA3E,GAAA/C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyH,EAAO3F,EAAO+E,EAAQa,GAAQ,IAAAZ,EAAAa,EAAAX,EAAA,OAAAjH,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,OAK1D,OAJKoG,EAAS,CACbG,QAAS,CACPC,cAAc,UAAD9C,OAAYtC,KAE5B8F,EAAAlH,KAAA,EAEsByG,EAAAA,EAAAA,MAAY,GAAD/C,OAAIgD,yCAA6B,WAAAhD,OAAUyC,EAAM,KAAAzC,OAAIsD,GAAY,CAAC,EAAGZ,GAAQ,KAAD,EAAlG,OAAkGa,EAAAC,EAAA7G,KAAtGiG,EAAIW,EAAJX,KAAIY,EAAAP,OAAA,SAELL,GAAI,wBAAAY,EAAA3G,OAAA,GAAAwG,EAAA,KACZ,gBAV2BpF,EAAAC,EAAAuF,GAAA,OAAAhF,EAAAzB,MAAA,KAAAC,UAAA,KAYfyG,EAAgB,eAAAhD,GAAAhF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+H,EAAOjG,EAAO+E,GAAM,IAAAC,EAAAkB,EAAAhB,EAAA,OAAAjH,EAAAA,EAAAA,KAAAQ,MAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,OAKjD,OAJKoG,EAAS,CACbG,QAAS,CACPC,cAAc,UAAD9C,OAAYtC,KAE5BmG,EAAAvH,KAAA,EAEsByG,EAAAA,EAAAA,IAAU,GAAD/C,OAAIgD,yCAA6B,WAAAhD,OAAUyC,EAAM,YAAYC,GAAQ,KAAD,EAAxF,OAAwFkB,EAAAC,EAAAlH,KAA5FiG,EAAIgB,EAAJhB,KAAIiB,EAAAZ,OAAA,SAELL,GAAI,wBAAAiB,EAAAhH,OAAA,GAAA8G,EAAA,KACZ,gBAV4BG,EAAAC,GAAA,OAAArD,EAAA1D,MAAA,KAAAC,UAAA,I","sources":["components/FlexBetween.jsx","schemas/login.schema.js","schemas/register.schema.js","constants/initialValuesLogin.js","constants/initialValuesRegister.js","scenes/loginPage/Form.jsx","scenes/loginPage/index.jsx","services/user.service.jsx"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\n\r\nconst FlexBetween = styled(Box)({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n});\r\n\r\nexport default FlexBetween;\r\n","import * as Yup from 'yup';\r\n\r\nexport const loginSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email').required('required'),\r\n  password: Yup.string().required('required'),\r\n});\r\n","import * as Yup from 'yup';\r\n\r\nexport const registerSchema = Yup.object().shape({\r\n  firstName: Yup.string().required('required'),\r\n  lastName: Yup.string().required('required'),\r\n  email: Yup.string().email('Invalid email').required('required'),\r\n  password: Yup.string().required('required'),\r\n  location: Yup.string().required('required'),\r\n  occupation: Yup.string().required('required'),\r\n  picture: Yup.string().required('required'),\r\n});\r\n","export const initialValuesLogin = {\r\n  email: '',\r\n  password: '',\r\n};\r\n","export const initialValuesRegister = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: '',\r\n  location: '',\r\n  occupation: '',\r\n  picture: '',\r\n};\r\n","import { useState } from 'react';\r\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme } from '@mui/material';\r\nimport { EditOutlined } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogin } from 'state';\r\nimport Dropzone from 'react-dropzone';\r\nimport FlexBetween from 'components/FlexBetween';\r\nimport { loginUser, registerUser } from 'services/user.service';\r\nimport { loginSchema } from 'schemas/login.schema';\r\nimport { registerSchema } from 'schemas/register.schema';\r\nimport { initialValuesLogin } from 'constants/initialValuesLogin';\r\nimport { initialValuesRegister } from 'constants/initialValuesRegister';\r\n\r\nconst Form = () => {\r\n  const [pageType, setPageType] = useState('login');\r\n  const { palette } = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isNonMobile = useMediaQuery('(min-width:600px)');\r\n  const isLogin = pageType === 'login';\r\n  const isRegister = pageType === 'register';\r\n\r\n  const register = async (values, onSubmitProps) => {\r\n    /* this allows us to send form info with image  */\r\n    const formData = new FormData();\r\n    for (let value in values) {\r\n      formData.append(value, values[value]);\r\n    }\r\n    formData.append('picturePath', values.picture.name);\r\n\r\n    const registeredUser = await registerUser(formData);\r\n\r\n    onSubmitProps.resetForm();\r\n\r\n    if (registeredUser) {\r\n      setPageType('login');\r\n    }\r\n  };\r\n\r\n  const login = async (values, onSubmitProps) => {\r\n    const userLoggedIn = await loginUser(values);\r\n\r\n    if (userLoggedIn) {\r\n      dispatch(\r\n        setLogin({\r\n          user: userLoggedIn.user,\r\n          token: userLoggedIn.token,\r\n        })\r\n      );\r\n      navigate('/home');\r\n      onSubmitProps.resetForm();\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    if (isLogin) await login(values, onSubmitProps);\r\n    if (isRegister) await register(values, onSubmitProps);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleFormSubmit}\r\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\r\n      validationSchema={isLogin ? loginSchema : registerSchema}\r\n    >\r\n      {({ values, errors, touched, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm }) => (\r\n        <form onSubmit={handleSubmit} autoComplete='false'>\r\n          <Box\r\n            display={'grid'}\r\n            gap={'30px'}\r\n            gridTemplateColumns={'repeat(4, minmax(0, 1fr))'}\r\n            sx={{ '& > div': { gridColumn: isNonMobile ? undefined : 'span 4' } }}\r\n          >\r\n            {isRegister && (\r\n              <>\r\n                <TextField\r\n                  label='First Name'\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  error={Boolean(touched.firstName) && Boolean(errors.firstName)}\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  sx={{ gridColumn: 'span 2' }}\r\n                />\r\n                <TextField\r\n                  label='Last Name'\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  sx={{ gridColumn: 'span 2' }}\r\n                />\r\n                <TextField\r\n                  label='Location'\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.location}\r\n                  name='location'\r\n                  error={Boolean(touched.location) && Boolean(errors.location)}\r\n                  helperText={touched.location && errors.location}\r\n                  sx={{ gridColumn: 'span 4' }}\r\n                />\r\n                <TextField\r\n                  label='Occupation'\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.occupation}\r\n                  name='occupation'\r\n                  error={Boolean(touched.occupation) && Boolean(errors.occupation)}\r\n                  helperText={touched.occupation && errors.occupation}\r\n                  sx={{ gridColumn: 'span 4' }}\r\n                />\r\n                <Box\r\n                  gridColumn={'span 4'}\r\n                  border={`1px solid ${palette.neutral.medium}`}\r\n                  borderRadius={'5px'}\r\n                  p={'1rem'}\r\n                >\r\n                  <Dropzone\r\n                    accept={'.jpg,.jpeg,.png'}\r\n                    multiple={false}\r\n                    onDrop={(acceptedFiles) => setFieldValue('picture', acceptedFiles[0])}\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <Box\r\n                        {...getRootProps()}\r\n                        border={`2px dashed ${palette.primary.main}`}\r\n                        p={'1rem'}\r\n                        sx={{ '&:hover': { cursor: 'pointer' } }}\r\n                      >\r\n                        <input {...getInputProps()} />\r\n                        {!values.picture ? (\r\n                          <p>Add Picture Here</p>\r\n                        ) : (\r\n                          <FlexBetween>\r\n                            <Typography>{values.picture.name}</Typography>\r\n                            <EditOutlined />\r\n                          </FlexBetween>\r\n                        )}\r\n                      </Box>\r\n                    )}\r\n                  </Dropzone>\r\n                </Box>\r\n              </>\r\n            )}\r\n\r\n            <TextField\r\n              label='Email'\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name='email'\r\n              error={Boolean(touched.email) && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n              sx={{ gridColumn: 'span 4' }}\r\n            />\r\n            <TextField\r\n              label='Password'\r\n              type='password'\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.password}\r\n              name='password'\r\n              error={Boolean(touched.password) && Boolean(errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              sx={{ gridColumn: 'span 4' }}\r\n            />\r\n          </Box>\r\n          {/* BUTTONS */}\r\n          <Box>\r\n            <Button\r\n              fullWidth\r\n              type='submit'\r\n              sx={{\r\n                margin: '2rem 0',\r\n                p: '1rem',\r\n                backgroundColor: palette.primary.main,\r\n                color: palette.background.alt,\r\n                '&:hover': { color: palette.primary.main },\r\n              }}\r\n            >\r\n              {isLogin ? 'LOGIN' : 'REGISTER'}\r\n            </Button>\r\n            <Typography\r\n              onClick={() => {\r\n                setPageType(isLogin ? 'register' : 'login');\r\n                resetForm();\r\n              }}\r\n              sx={{\r\n                textDecoration: 'underline',\r\n                color: palette.primary.main,\r\n                '&:hover': { cursor: 'pointer', color: palette.primary.light },\r\n              }}\r\n            >\r\n              {isLogin ? \"Don't have an account ? Sign Up here.\" : 'Already have an account ? Login here.'}\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Form;\r\n","import { Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport Form from './Form';\r\n\r\nconst LoginPage = () => {\r\n  const theme = useTheme();\r\n  const isNonMobileScreens = useMediaQuery('(min-width:1000px)');\r\n\r\n  return (\r\n    <Box>\r\n      <Box width={'100%'} backgroundColor={theme.palette.background.alt} p={'1rem 6%'} textAlign={'center'}>\r\n        <Typography fontWeight='bold' fontSize='clamp(1rem, 2rem, 2.25rem)' color='primary'>\r\n          Sociopedia\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        width={isNonMobileScreens ? '50%' : '93%'}\r\n        p={'2rem'}\r\n        m={'2rem auto'}\r\n        borderRadius={'1.5rem'}\r\n        backgroundColor={theme.palette.background.alt}\r\n      >\r\n        <Typography fontWeight={'500'} variant='h5' sx={{ mb: '1.5rem' }}>\r\n          Welcome to Socipedia, The Social Media for Partners!\r\n        </Typography>\r\n        <Form />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import axios from 'axios';\r\n\r\nexport const getUserById = async (token, userId) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.get(`${process.env.REACT_APP_URL_API}/users/${userId}`, config);\r\n  return data;\r\n};\r\n\r\nexport const loginUser = async (values) => {\r\n  const { data } = await axios.post(`${process.env.REACT_APP_URL_API}/auth/login`, values);\r\n  return data;\r\n};\r\n\r\nexport const registerUser = async (values) => {\r\n  const { data } = await axios.post(`${process.env.REACT_APP_URL_API}/auth/register`, values);\r\n  return data;\r\n};\r\n\r\nexport const addRemoveFriend = async (token, userId, friendId) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.patch(`${process.env.REACT_APP_URL_API}/users/${userId}/${friendId}`, {}, config);\r\n\r\n  return data;\r\n};\r\n\r\nexport const getFriendsOfUser = async (token, userId) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.get(`${process.env.REACT_APP_URL_API}/users/${userId}/friends`, config);\r\n\r\n  return data;\r\n};\r\n"],"names":["FlexBetween","styled","Box","display","justifyContent","alignItems","loginSchema","Yup","shape","email","required","password","registerSchema","firstName","lastName","location","occupation","picture","initialValuesLogin","initialValuesRegister","_useState","useState","_useState2","_slicedToArray","pageType","setPageType","palette","useTheme","dispatch","useDispatch","navigate","useNavigate","isNonMobile","useMediaQuery","isLogin","isRegister","register","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","onSubmitProps","formData","value","registeredUser","wrap","_context","prev","next","FormData","append","name","registerUser","sent","resetForm","stop","_x","_x2","apply","arguments","login","_ref2","_callee2","userLoggedIn","_context2","loginUser","setLogin","user","token","_x3","_x4","handleFormSubmit","_ref3","_callee3","_context3","_x5","_x6","_jsx","Formik","onSubmit","initialValues","validationSchema","children","_ref4","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","_jsxs","autoComplete","gap","gridTemplateColumns","sx","gridColumn","undefined","_Fragment","TextField","label","onBlur","onChange","error","Boolean","helperText","border","concat","neutral","medium","borderRadius","p","Dropzone","accept","multiple","onDrop","acceptedFiles","_ref5","getRootProps","getInputProps","_objectSpread","primary","main","cursor","Typography","EditOutlined","type","Button","fullWidth","margin","backgroundColor","color","background","alt","onClick","textDecoration","light","theme","isNonMobileScreens","width","textAlign","fontWeight","fontSize","m","variant","mb","Form","getUserById","userId","config","_yield$axios$get","data","headers","Authorization","axios","process","abrupt","_yield$axios$post","_yield$axios$post2","addRemoveFriend","_callee4","friendId","_yield$axios$patch","_context4","_x7","getFriendsOfUser","_callee5","_yield$axios$get2","_context5","_x8","_x9"],"sourceRoot":""}